// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  subcategories SubCategory[]
  Product       Product[]
  Item       Item[] 
  Supplier      Supplier[]
  Orders      Order[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  Product    Product[]
  @@unique([name, categoryId]) // prevent duplicate subcategories under same category
  Item       Item[] 
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String
  productId     String
  category      Category    @relation(fields: [categoryId], references: [id])
  categoryId    Int
  subcategory   SubCategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
  buyingPrice   Float
  sellingPrice  Float
  quantity      Int
  unit          String
  threshold     Int
  batchId       String
  expiryDate    DateTime
  supplier      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}


model Item {
  id                 Int         @id @default(autoincrement())
  name               String
  productId          String      @unique
  Category           Category?    @relation(fields: [CategoryId], references: [id])
  CategoryId         Int?
  SubCategory        SubCategory? @relation(fields: [SubCategoryId], references: [id])
  SubCategoryId      Int?
  specification      String?
  brand              String?
  invoiceDate        DateTime?
  expiryDate         DateTime?
  unitOfMeasurement  String
  openingStock       Int
  asOnDate           DateTime?
  minStockLevel      Int
  unitPrice          Float
  gstRate            Float
  createdAt          DateTime    @default(now())
  updatedAt          DateTime?    @updatedAt
}

model Supplier {
  id            Int          @id @default(autoincrement())
  name          String
  product       String
  categoryId    Int
  category      Category     @relation(fields: [categoryId], references: [id])
  price         String
  contact       String
  email         String
  date          String
  review        String?
}

model Customer {
  id           Int      @id @default(autoincrement())
  customerId   String   @unique 
  name         String
  contact      String   
  email        String
  product      String   
  price        String  
  date         DateTime
  customerType String 
}

model Order {
  id         String       @id @default(uuid()) 
  orderId    String       @unique              
  product    String
  value      Float
  quantity   String
  delivery   DateTime
  status     OrderStatus  @default(CONFIRMED)
  category   Category?    @relation(fields: [categoryId], references: [id])
  categoryId Int?
  createdAt  DateTime     @default(now())
}

enum OrderStatus {
  CONFIRMED
  DELAYED
  RETURNED
  OUT_FOR_DELIVERY
}

